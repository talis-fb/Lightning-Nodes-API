stages:
  - ci
  - publish

variables:
  DOCKER_HOST: tcp://docker:2375
  GITLAB_IMAGE_NAME: $CI_REGISTRY_IMAGE/lightning-nodes
  COMMIT_TAG: $CI_COMMIT_SHORT_SHA

cargo-fmt:
  stage: ci
  image: rustlang/rust:nightly
  script:
    - rustup component add rustfmt
    - cargo fmt --check

cargo-build-test:
  stage: ci
  image: rust:1.88
  script:
    - cargo build --release

cargo-test:
  stage: ci
  image: rust:1.88
  script:
    - cargo test

build-base-image:
  stage: publish
  image: docker:cli
  services:
    - docker:dind
  script:
    - docker build --pull .
  only:
    - main

.publish-template:
  stage: publish
  needs: [build-base-image]
  image: docker:cli
  services:
    - docker:dind
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  only:
    - main

publish-full:
  extends: .publish-template
  script:
    - docker build --pull -t "$GITLAB_IMAGE_NAME:full" .
    - docker tag "$GITLAB_IMAGE_NAME:full" "$GITLAB_IMAGE_NAME:full-$COMMIT_TAG"
    - docker push "$GITLAB_IMAGE_NAME:full"
    - docker push "$GITLAB_IMAGE_NAME:full-$COMMIT_TAG"
    - docker tag "$GITLAB_IMAGE_NAME:full" "$GITLAB_IMAGE_NAME:latest"
    - docker push "$GITLAB_IMAGE_NAME:latest"

publish-api-only:
  extends: .publish-template
  script:
    - docker build --pull -t "$GITLAB_IMAGE_NAME:api-only" --build-arg FEATURES="disable_api" .
    - docker tag "$GITLAB_IMAGE_NAME:api-only" "$GITLAB_IMAGE_NAME:api-only-$COMMIT_TAG"
    - docker push "$GITLAB_IMAGE_NAME:api-only"
    - docker push "$GITLAB_IMAGE_NAME:api-only-$COMMIT_TAG"
  
publish-worker-only:
  extends: .publish-template
  script:
    - docker build --pull -t "$GITLAB_IMAGE_NAME:worker-only" --build-arg FEATURES="disable_worker" .
    - docker tag "$GITLAB_IMAGE_NAME:worker-only" "$GITLAB_IMAGE_NAME:worker-only-$COMMIT_TAG"
    - docker push "$GITLAB_IMAGE_NAME:worker-only"
    - docker push "$GITLAB_IMAGE_NAME:worker-only-$COMMIT_TAG"